name: üöÄ Build and Release üöÄ

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    # üîê –£–∫–∞–∑—ã–≤–∞–µ–º –∑–¥–µ—Å—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ç–æ–∫–µ–Ω–∞
    permissions:
      contents: write   # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–≤–∫–ª—é—á–∞—è —Ä–µ–ª–∏–∑—ã)
      actions: write    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—ç—à–µ–º (–æ—á–∏—Å—Ç–∫–∞)
    env:  # ‚öôÔ∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö —à–∞–≥–æ–≤
      DEBUG_MODE: "false"  # –í–∫–ª—é—á–∏—Ç—å –¥–µ–±–∞–≥ (true/false)
      FORCE_CACHE_REFRESH: "false"  # ‚öôÔ∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ (true/false)

    steps:

      # üîç –®–∞–≥ 1: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —Å –∏—Å—Ç–æ—Ä–∏–µ–π –∫–æ–º–º–∏—Ç–æ–≤
      - name: üîç –®–∞–≥ 1. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v4
        with:
          fetch-depth: 50  # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 50 –∫–æ–º–º–∏—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π

      # üîç –®–∞–≥ 2. –ê–Ω–∞–ª–∏–∑ –∫–æ–º–º–∏—Ç–∞
      - name: üîç –®–∞–≥ 2. –ê–Ω–∞–ª–∏–∑ –∫–æ–º–º–∏—Ç–∞
        id: push-details
        shell: pwsh
        run: |
          # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é DEBUG_MODE
          if ("${{ env.DEBUG_MODE }}" -eq "true") {
              Write-Host "üöÄ [DEBUG] –†–µ–∂–∏–º —á–∏—Å—Ç–æ–π –æ—Ç–ª–∞–¥–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!"
          }
          <#
            .DESCRIPTION
            –°–æ–±–∏—Ä–∞–µ—Ç —Ö—ç—à –∫–æ–º–º–∏—Ç–∞, —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.
            –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ GITHUB_OUTPUT.
          #>
          $DebugEnabled = ($env:DEBUG_MODE -eq "true")

          # --- –•—ç—à –∫–æ–º–º–∏—Ç–∞ ---
          $commitHash = git rev-parse HEAD
          if ($DebugEnabled) { Write-Host "üöÄ [DEBUG] –•—ç—à: $commitHash" }

          # --- –°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞ ---
          $commitMessage = git log -1 --pretty=%B
          if ($DebugEnabled) {
              Write-Host "üìù [DEBUG] –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:"
              Write-Host $commitMessage
          }

          # --- –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ---
          $escapedCommitMessage = $commitMessage `
              -replace '"', '`"' `
              -replace "'", "''" `
              -replace "[\r\n]", " "
          if ($DebugEnabled) { Write-Host "üîê [DEBUG] –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: $escapedCommitMessage" }

          # --- –ò–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã ---
          $changedFiles = git diff --name-only HEAD^ HEAD
          if ($DebugEnabled) { 
              Write-Host "üìÇ [DEBUG] –ò–∑–º–µ–Ω–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $($changedFiles.Count)"
              $changedFiles | ForEach-Object { Write-Host "   ‚Üí $_" }
          }

          # --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ---
          echo "commit_hash=$commitHash" >> $env:GITHUB_OUTPUT
          echo "commit_message=$escapedCommitMessage" >> $env:GITHUB_OUTPUT
          echo "changed_files=$($changedFiles -join ';')" >> $env:GITHUB_OUTPUT
          $debugPattern = "(?i)\b(debug|d+e+b+u+g+|–¥–µ–±–∞–≥?|–¥[–µ—ç]–±–∞–≥|–æ—Ç–ª–∞–¥–∫[–∞–∏]|debugged|debugging)\b"
          $isDebugEnabled = $commitMessage -match $debugPattern
          echo "auto_debug=$isDebugEnabled" >> $env:GITHUB_OUTPUT
          if ("$isDebugEnabled" -eq "true") {
              Write-Host "üöÄ [DEBUG] –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! (–∑–∞–ø—Ä–æ—Å –∏–∑ push)"
          }

      # üîç –®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python 2.7
      # --------------------------------------------------
      # 3.1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Python 2.7
      - name: üîç –®–∞–≥ 3.1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ Python
        id: check-python
        shell: pwsh
        run: |
          <#
            .SYNOPSIS
            –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ Python 2.7 –≤ —Å–∏—Å—Ç–µ–º–µ. 
            –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ.
          #>
          $DebugEnabled = "${{ env.DEBUG_MODE }}" -eq "true"
          $pythonInstalled = $false

          try {
              # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é Python –∏ –ø—É—Ç—å
              $version = (python --version 2>&1) -join " "
              $path = (Get-Command python -ErrorAction Stop).Source

              if ($version -match "Python 2\.7" -and $path -match "Python27") {
                  $pythonInstalled = $true
                  if ($DebugEnabled) {
                      Write-Host "‚úÖ [DEBUG] Python 2.7 –Ω–∞–π–¥–µ–Ω:"
                      Write-Host "  –í–µ—Ä—Å–∏—è: $version"
                      Write-Host "  –ü—É—Ç—å: $path"
                  }
              }
          } catch {
              if ($DebugEnabled) { Write-Host "‚ùå [DEBUG] Python 2.7 –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω." }
          }

          # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
          echo "python_installed=$pythonInstalled" >> $env:GITHUB_OUTPUT
          if ($DebugEnabled) { Write-Host "python_installed=$pythonInstalled" }

      # 3.2. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ Python
      - name: üîÑ –®–∞–≥ 3.2. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–∞
        id: cache-python
        uses: actions/cache@v4
        with:
          # üìå –û–ø–∏—Å–∞–Ω–∏–µ:
          #   –ö—ç—à–∏—Ä—É–µ—Ç Python 2.7, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
          #   –ö–ª—é—á –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π FORCE_CACHE_REFRESH
          path: |
            C:\hostedtoolcache\windows\Python\2.7*
            C:\Python27
          key: python-2.7-${{ env.FORCE_CACHE_REFRESH }}  # "true" –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        if: steps.check-python.outputs.python_installed == 'false'

      # 3.3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 2.7
      - name: üì• –®–∞–≥ 3.3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–∞
        id: setup-python
        uses: LizardByte/actions/actions/setup_python@master
        with:
          # üìå –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:
          #   –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Python 2.7 —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏:
          #   - –û–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ (python_installed=false)
          #   - –ò–ª–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Ñ–ª–∞–≥ FORCE_CACHE_REFRESH
          python-version: "2.7"
          # architecture: x64  # üîÑ –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
          # cache: "false"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–≤–æ–π –∫—ç—à # ‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä cache —É–¥–∞–ª–µ–Ω
        if: |
          steps.check-python.outputs.python_installed == 'false' || 
          env.FORCE_CACHE_REFRESH == 'true'

      # 3.4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      - name: üì¶ –®–∞–≥ 3.4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
        shell: pwsh
        run: |
          <#
            .SYNOPSIS
            –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ requirements.txt.
            –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –≤ —Ä–µ–∂–∏–º–µ –¥–µ–±–∞–≥–∞.
          #>
          $DebugEnabled = "${{ env.DEBUG_MODE }}" -eq "true"
          $requirementsPath = ".github/workflows/requirements.txt"

          if (Test-Path $requirementsPath) {
              if ($DebugEnabled) { 
                  Write-Host "üì¶ [DEBUG] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏–∑ $requirementsPath :"
                  Get-Content $requirementsPath | ForEach-Object { Write-Host "  ‚Üí $_" }
              }
              pip install --upgrade -r $requirementsPath
          } else {
              if ($DebugEnabled) { Write-Host "‚ÑπÔ∏è [DEBUG] requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω." }
          }

      # üîç –®–∞–≥ 4: –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
      - name: üîç –®–∞–≥ 4. –ü–æ–∏—Å–∫ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –¥–ª—è —Ä–µ–ª–∏–∑–∞
        id: check_commit
        shell: pwsh
        env:
          DEBUG_MODE: ${{ steps.push-details.outputs.auto_debug || env.DEBUG_MODE }}
        run: |
          <#
            .SYNOPSIS
            –ò—â–µ—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∫–æ–º–º–∏—Ç–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞, —É–∫–∞–∑—ã–≤–∞—é—â–∏–µ –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Ä–µ–ª–∏–∑–∞.
            –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ —Å–æ–±—Ä–∞—Ç—å –≤—Å–µ –º–æ–¥—ã –∏–ª–∏ —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ.

            .–ü–ï–†–ï–ú–ï–ù–ù–´–ï
            - commit_message: –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞ (–∏–∑ —à–∞–≥–∞ 2).
            - changed_files: –°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–∏–∑ —à–∞–≥–∞ 2).

            .–í–´–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï
            - is_release (true/false): –ù–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è —Ä–µ–ª–∏–∑–∞.
            - is_all (true/false): –ù—É–∂–Ω–æ –ª–∏ —Å–æ–±—Ä–∞—Ç—å –≤—Å–µ –º–æ–¥—ã.
          #>
          $DebugEnabled = "${{ env.DEBUG_MODE }}" -eq "true"

          # ------------------------------
          # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
          # ------------------------------
          $commitMessage = "${{ steps.push-details.outputs.commit_message }}"
          $changedFiles = "${{ steps.push-details.outputs.changed_files }}" -split ";"

          if ($DebugEnabled) {
              Write-Host "`nüîµ [DEBUG] –ù–∞—á–∞–ª–æ —à–∞–≥–∞ 4:"
              Write-Host "----------------------------------------"
              Write-Host "üìù –°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: $commitMessage"
              Write-Host "üìÇ –ò–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã: $($changedFiles -join ', ')"
              Write-Host "----------------------------------------"
          }

          # ------------------------------
          # 2. –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
          # ------------------------------
          <#
            –§–æ—Ä–º–∞—Ç—ã –¥–ª—è —Ä–µ–ª–∏–∑–∞:
            - –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ: release, releases, releasing, released
            - –†—É—Å—Å–∫–∏–µ: —Ä–µ–ª–∏–∑, —Ä–µ–ª–∏–∑—ã, —Ä–µ–ª–∏–∑–æ–≤, —Ä–µ–ª–∏–∑–Ω—ã–π
          #>
          $releasePattern = "(?i)\b(release(s|d|ing)?|—Ä–µ–ª–∏–∑(—ã|–æ–≤|–Ω—ã–π)?)\b"

          <#
            –§–æ—Ä–º–∞—Ç—ã –¥–ª—è "–≤—Å–µ—Ö –º–æ–¥–æ–≤":
            - –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ: all, every, full
            - –†—É—Å—Å–∫–∏–µ: –≤—Å–µ, –≤—Å–µ—Ö, –≤—Å—ë, –≤—Å—è, —Ü–µ–ª–∏–∫–æ–º
          #>
          $allPattern = "(?i)\b(all|every|full|–≤—Å–µ|–≤—Å–µ—Ö|–≤—Å[–µ—ë]|–≤—Å—è|—Ü–µ–ª–∏–∫–æ–º)\b"

          # ------------------------------
          # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
          # ------------------------------
          $isRelease = $commitMessage -match $releasePattern
          $isAll = $commitMessage -match $allPattern
          $isGameVersionChanged = $changedFiles -contains ".github/game_version.json"
          
          if ($isGameVersionChanged -or ($isAll -and $isRelease)) {
            $isRelease = ($isGameVersionChanged -or $isAll)
          }
          
          if ($DebugEnabled) {
              Write-Host "`nüîµ [DEBUG] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:"
              Write-Host "  ‚úÖ –ù–∞–π–¥–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —Ä–µ–ª–∏–∑–∞: $isRelease"
              Write-Host "  ‚úÖ –ù–∞–π–¥–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ '–≤—Å–µ –º–æ–¥—ã': $isAll"
              Write-Host "  ‚úÖ –ò–∑–º–µ–Ω—ë–Ω game_version.json: $isGameVersionChanged"
              Write-Host "----------------------------------------"
          }

          # ------------------------------
          # 4. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
          # ------------------------------
          if ($isRelease) {
              echo "is_release=true" >> $env:GITHUB_OUTPUT
              echo "is_all=$($isAll -or $isGameVersionChanged)" >> $env:GITHUB_OUTPUT
              echo "is_all=true" >> $env:GITHUB_OUTPUT
              Write-Host "üî¥ [WARNING] –ù—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –≤—Å–µ –º–æ–¥—ã –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ, –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π —Ä–µ–ª–∏–∑–æ–≤ –≤ latest"
              

              if ($DebugEnabled) {
                  Write-Host "üü¢ [–£–°–ü–ï–•] –†–µ–ª–∏–∑ —Ç—Ä–µ–±—É–µ—Ç—Å—è! is_all=$($isAll -or $isGameVersionChanged)"
              }
          } else {
              echo "is_release=false" >> $env:GITHUB_OUTPUT
              echo "is_all=false" >> $env:GITHUB_OUTPUT
              
              if ($DebugEnabled) {
                  Write-Host "üî¥ [–û–®–ò–ë–ö–ê] –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏."
              }
              exit 0
          }

      # üîç –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ game_version.json –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–æ–¥–æ–≤
      - name: üîç –®–∞–≥ 5. –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–æ–≤
        if: steps.check_commit.outputs.is_release == 'true'
        id: process_game_version
        shell: pwsh
        env:
          DEBUG_MODE: "${{ env.DEBUG_MODE }}"  # –ù–∞—Å–ª–µ–¥—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Ñ–ª–∞–≥ –¥–µ–±–∞–≥–∞
        run: |
          <#
            .SYNOPSIS
            –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å game_version.json –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–¥–æ–≤ –¥–ª—è —Å–±–æ—Ä–∫–∏.
            –ü—Ä–µ—Ä—ã–≤–∞–µ—Ç workflow –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö.
            
            .INPUTS
            - commit_message: –°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
            - changed_files: –°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
            
            .OUTPUTS
            - wg_version: –í–µ—Ä—Å–∏—è –∫–ª–∏–µ–Ω—Ç–∞ WG (—Ñ–æ—Ä–º–∞—Ç: X.X.X.X)
            - lesta_version: –í–µ—Ä—Å–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Lesta (—Ñ–æ—Ä–º–∞—Ç: X.X.X.X)
            - mod_list: –°–ø–∏—Å–æ–∫ –º–æ–¥–æ–≤ –¥–ª—è —Å–±–æ—Ä–∫–∏ (—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å: ;)
            
            .NOTES
            - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ game_version.json
            - –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–π –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É JSON
            - –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–¥–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–ª–∏ —Ñ–ª–∞–≥–∞ "–≤—Å–µ"
          #>
          $ErrorActionPreference = "Stop"  # üî¥ –ü—Ä–µ—Ä—ã–≤–∞—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
          $DebugEnabled = ($env:DEBUG_MODE -eq "true")
          
          # ------------------------------
          # 1. üõ†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
          # ------------------------------
          $gameVersionPath = ".github/game_version.json"
          if (-not (Test-Path $gameVersionPath)) {
              Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –§–∞–π–ª $gameVersionPath –Ω–µ –Ω–∞–π–¥–µ–Ω!"
              exit 1
          }
          if ($DebugEnabled) { Write-Host "‚úÖ [DEBUG] –§–∞–π–ª –æ–±–Ω–∞—Ä—É–∂–µ–Ω: $gameVersionPath" }
          
          # ------------------------------
          # 2. üìñ –ß—Ç–µ–Ω–∏–µ –∏ –ø–∞—Ä—Å–∏–Ω–≥ JSON
          # ------------------------------
          try {
              # üîç –ß–∏—Ç–∞–µ–º —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8
              $jsonContent = Get-Content $gameVersionPath -Encoding UTF8 -Raw
              $gameVersionContent = $jsonContent | ConvertFrom-Json
              if ($DebugEnabled) { 
                  Write-Host "üìÑ [DEBUG] –°–æ–¥–µ—Ä–∂–∏–º–æ–µ JSON:"
                  $gameVersionContent | ConvertTo-Json | Write-Host 
              }
          } catch {
              Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: $_"
              exit 1
          }
          
          # ------------------------------
          # 3. üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
          # ------------------------------
          $requiredFields = @("CLIENT_VERSION_WG", "CLIENT_VERSION_RU", "mod_list")
          foreach ($field in $requiredFields) {
              if (-not ($gameVersionContent.PSObject.Properties.Name -contains $field)) {
                  Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –ü–æ–ª–µ '$field' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ JSON"
                  exit 1
              }
          }
          if ($DebugEnabled) { Write-Host "‚úÖ [DEBUG] –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç" }
          
          # ------------------------------
          # 4. üß™ –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–µ—Ä—Å–∏–π
          # ------------------------------
          $versionPattern = '^\d+\.\d+\.\d+\.\d+$'
          $wg_version = $gameVersionContent.CLIENT_VERSION_WG
          $lesta_version = $gameVersionContent.CLIENT_VERSION_RU
          
          # üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ WG
          if (-not ($wg_version -match $versionPattern)) {
              Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç WG: '$wg_version' (–æ–∂–∏–¥–∞–µ—Ç—Å—è X.X.X.X)"
              exit 1
          }
          
          # üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Lesta
          if (-not ($lesta_version -match $versionPattern)) {
              Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Lesta: '$lesta_version' (–æ–∂–∏–¥–∞–µ—Ç—Å—è X.X.X.X)"
              exit 1
          }
          if ($DebugEnabled) { Write-Host "‚úÖ [DEBUG] –í–µ—Ä—Å–∏–∏ –≤–∞–ª–∏–¥–Ω—ã: WG=$wg_version, Lesta=$lesta_version" }
          
          # ------------------------------
          # 5. üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –º–æ–¥–æ–≤
          # ------------------------------
          $modListFromFile = $gameVersionContent.mod_list
          if ($modListFromFile.Count -eq 0) {
              Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –°–ø–∏—Å–æ–∫ –º–æ–¥–æ–≤ –ø—É—Å—Ç!"
              exit 1
          }
          
          foreach ($mod in $modListFromFile) {
              # üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –º–æ–¥–∞
              if (-not ($mod -match "^mod_")) {
                  Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –ú–æ–¥ '$mod' –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 'mod_'"
                  exit 1
              }
              
              # üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
              $modSourcePath = "$mod/source/$mod.py"
              if (-not (Test-Path $modSourcePath)) {
                  Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –§–∞–π–ª –º–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $modSourcePath"
                  exit 1
              }
          }
          if ($DebugEnabled) { Write-Host "‚úÖ [DEBUG] –í—Å–µ –º–æ–¥—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –∏—Å—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã" }
          
          # ------------------------------
          # 6. üß© –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–±–æ—Ä–∫–∏
          # ------------------------------
          $isAll = "${{ steps.check_commit.outputs.is_all }}" -eq "true"
          $changedFiles = "${{ steps.push-details.outputs.changed_files }}" -split ";"
          $isGameVersionChanged = $changedFiles -contains ".github/game_version.json"


          # üß© –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–±–æ—Ä–∫–∏
          if ($isAll -or $isGameVersionChanged) {
              $MOD_LIST = $modListFromFile
              if ($DebugEnabled) { 
                  Write-Host "üîµ [DEBUG] –†–µ–∂–∏–º: –í–°–ï –º–æ–¥—ã (is_all=$isAll, game_version_changed=$isGameVersionChanged)" 
              }
          } else {
              $MOD_LIST = @()
              foreach ($file in $changedFiles) {
                  if ($file -match "^(?<mod>mod_[^/]+)/source/") {
                      $modName = $matches.mod
                      if ($modListFromFile -contains $modName -and $MOD_LIST -notcontains $modName) {
                          $MOD_LIST += $modName
                          if ($DebugEnabled) { Write-Host "üîµ [DEBUG] –î–æ–±–∞–≤–ª–µ–Ω –º–æ–¥: $modName (–∏–∑–º–µ–Ω–µ–Ω –≤ –∫–æ–º–º–∏—Ç–µ)" }
                      }
                  }
              }
          }

          # ------------------------------
          # 7. üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
          # ------------------------------
          echo "wg_version=$wg_version" >> $env:GITHUB_OUTPUT
          echo "lesta_version=$lesta_version" >> $env:GITHUB_OUTPUT
          echo "mod_list=$($MOD_LIST -join ';')" >> $env:GITHUB_OUTPUT
          
          if ($DebugEnabled) {
              Write-Host "`nüéâ [–ò–¢–û–ì] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —à–∞–≥–∞ 5:"
              Write-Host "----------------------------------------"
              Write-Host "WG Version:    $wg_version"
              Write-Host "Lesta Version: $lesta_version"
              Write-Host "Mods Count:    $($MOD_LIST.Count)"
              Write-Host "Mods List:     $($MOD_LIST -join ', ')"
              Write-Host "----------------------------------------"
          }

      # üöÄ –®–∞–≥ 6: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—Ä—Ö–∏–≤–æ–≤ –º–æ–¥–æ–≤
      - name: üöÄ –®–∞–≥ 6. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–Ω—ã—Ö –∞—Ä—Ö–∏–≤–æ–≤
        if: steps.check_commit.outputs.is_release == 'true'
        id: run_create_release
        shell: pwsh
        env:
          DEBUG_MODE: "${{ env.DEBUG_MODE }}"
          PYTHONIOENCODING: "UTF-8"  # üî† –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-8
        run: |
          <#
            .SYNOPSIS
            –ó–∞–ø—É—Å–∫–∞–µ—Ç createRelease.py –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—Ä—Ö–∏–≤–æ–≤ –º–æ–¥–æ–≤.
            –§–æ—Ä–º–∞—Ç—ã –∞—Ä—Ö–∏–≤–æ–≤:
            - WG: <mod>/zip/<mod>.zip
            - Lesta: <mod>/zip/<mod>_RU.zip

            .NOTES
            - –¢—Ä–µ–±—É–µ—Ç Python 2.7
            - –ö–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-8 –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä—É—Å—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
          #>
          $ErrorActionPreference = "Stop"
          $DebugEnabled = ($env:DEBUG_MODE -eq "true")

          # =====================
          # 1. üêç –ü–†–û–í–ï–†–ö–ê PYTHON
          # =====================
          Write-Host "`nüîµ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python..."
          $pythonVersion = (python --version 2>&1).ToString()
          if (-not ($pythonVersion -match "Python 2\.7")) {
              Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –ù–µ–≤–µ—Ä–Ω–∞—è –≤–µ—Ä—Å–∏—è: $pythonVersion" -ForegroundColor Red
              Write-Host "‚ÑπÔ∏è –¢—Ä–µ–±—É–µ—Ç—Å—è Python 2.7.x" -ForegroundColor Yellow
              exit 1
          }
          Write-Host "‚úÖ –í–µ—Ä—Å–∏—è Python –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: $pythonVersion"

          # =====================
          # 2. üõ†Ô∏è –§–û–†–ú–ò–†–û–í–ê–ù–ò–ï –ê–†–ì–£–ú–ï–ù–¢–û–í
          # =====================
          <# 
            .DESCRIPTION
            –§–æ—Ä–º–∏—Ä—É–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è —Å–∫—Ä–∏–ø—Ç–∞:
            - lesta_version: –í–µ—Ä—Å–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Lesta
            - wg_version: –í–µ—Ä—Å–∏—è –∫–ª–∏–µ–Ω—Ç–∞ WG
            - mod_list: –°–ø–∏—Å–æ–∫ –º–æ–¥–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª
            - --debug: –§–ª–∞–≥ –æ—Ç–ª–∞–¥–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
          #>
          $scriptArgs = @(
              "${{ steps.process_game_version.outputs.lesta_version }}",
              "${{ steps.process_game_version.outputs.wg_version }}"
          )
          $modList = "${{ steps.process_game_version.outputs.mod_list }}" -split ";"
          $scriptArgs += $modList

          if ($DebugEnabled) {
              $scriptArgs += "--debug"
              Write-Host "üîµ [DEBUG] –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∫—Ä–∏–ø—Ç–∞:"
              Write-Host "  ‚Üí Lesta: $($scriptArgs[0])"
              Write-Host "  ‚Üí WG: $($scriptArgs[1])"
              Write-Host "  ‚Üí –ú–æ–¥—ã: $($modList -join ', ')"
          }

          # =====================
          # 3. üöÄ –ó–ê–ü–£–°–ö –°–ö–†–ò–ü–¢–ê
          # =====================
          try {
              Write-Host "`nüîµ –ó–∞–ø—É—Å–∫ createRelease.py..."
              chcp 65001 > $null  # ‚û°Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8 –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
              
              # üî• –ó–∞–ø—É—Å–∫ —Å –ø–µ—Ä–µ—Ö–≤–∞—Ç–æ–º –≤—ã–≤–æ–¥–∞
              $output = python ".github\createRelease.py" @scriptArgs 2>&1 | Out-String
              
              if ($DebugEnabled) {
                  Write-Host "üîµ [DEBUG] –í—ã–≤–æ–¥ —Å–∫—Ä–∏–ø—Ç–∞:"
                  Write-Host $output
              }

              if ($LASTEXITCODE -ne 0) {
                  Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞: $LASTEXITCODE" -ForegroundColor Red
                  exit 1
              }
          } catch {
              Write-Host "‚ùå [FATAL] –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $_" -ForegroundColor Red
              exit 1
          }

          # =====================
          # 4. üîç –ü–†–û–í–ï–†–ö–ê –ê–†–•–ò–í–û–í
          # =====================
          <#
            .DESCRIPTION
            –ü—Ä–æ–≤–µ—Ä—è–µ–º:
            1. –ù–∞–ª–∏—á–∏–µ –∞—Ä—Ö–∏–≤–æ–≤
            2. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∏–º–µ–Ω —à–∞–±–ª–æ–Ω—É
          #>
          Write-Host "`nüîµ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤..."
          $errorsFound = $false
          foreach ($mod in $modList) {
              $wgZip = "$mod\zip\$mod.zip"            # ‚öôÔ∏è –§–æ—Ä–º–∞—Ç WG
              $lestaZip = "$mod\zip\${mod}_RU.zip"    # ‚öôÔ∏è –§–æ—Ä–º–∞—Ç Lesta

              # –ü—Ä–æ–≤–µ—Ä–∫–∞ WG
              if (-not (Test-Path $wgZip)) {
                  Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –ê—Ä—Ö–∏–≤ WG –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: $wgZip" -ForegroundColor Red
                  $errorsFound = $true
              } elseif ($DebugEnabled) {
                  Write-Host "‚úÖ [DEBUG] WG –∞—Ä—Ö–∏–≤ –Ω–∞–π–¥–µ–Ω: $wgZip" -ForegroundColor Green
              }

              # –ü—Ä–æ–≤–µ—Ä–∫–∞ Lesta
              if (-not (Test-Path $lestaZip)) {
                  Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –ê—Ä—Ö–∏–≤ Lesta –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: $lestaZip" -ForegroundColor Red
                  $errorsFound = $true
              } elseif ($DebugEnabled) {
                  Write-Host "‚úÖ [DEBUG] Lesta –∞—Ä—Ö–∏–≤ –Ω–∞–π–¥–µ–Ω: $lestaZip" -ForegroundColor Green
              }
          }

          if ($errorsFound) {
              Write-Host "`nüî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã!" -ForegroundColor Red
              exit 1
          }
          Write-Host "‚úÖ –í—Å–µ –∞—Ä—Ö–∏–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!"

      # üîÑ –®–∞–≥ 7. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–æ–≤ –º–æ–¥–æ–≤
      - name: üîÑ –®–∞–≥ 7. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
        if: steps.check_commit.outputs.is_release == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: built-mods
          path: "**/zip/*.zip"  # üì¶ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ ZIP-–∞—Ä—Ö–∏–≤—ã –∏–∑ –ø–∞–ø–æ–∫ zip/
        env:
          DEBUG_MODE: "${{ env.DEBUG_MODE }}"
        # üõ°Ô∏è –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —à–∞–≥–æ–≤


      # üîÑ –®–∞–≥ 8. –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤ –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π
      - name: üîÑ –®–∞–≥ 8. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
        if: steps.check_commit.outputs.is_release == 'true'
        uses: actions/download-artifact@v4
        with:
          name: built-mods  # üìÅ –ò–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
          path: .  # üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ –∫–æ—Ä–µ–Ω—å —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        env:
          DEBUG_MODE: "${{ env.DEBUG_MODE }}"

      # üìù –®–∞–≥ 9. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ README.md
      - name: üìù –®–∞–≥ 9. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        if: steps.check_commit.outputs.is_release == 'true'
        id: update_readme
        shell: pwsh
        env:
          DEBUG_MODE: "${{ env.DEBUG_MODE }}"
        run: |
          <# 
            .SYNOPSIS
            –û–±–Ω–æ–≤–ª—è–µ—Ç README.md –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–æ–¥–∞:
            - –î–æ–±–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ–ª–∏–∑—ã —Å —Ç–µ–≥–æ–º latest
            - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–¥–∏—Ä–æ–≤–∫—É —Ñ–∞–π–ª–æ–≤
            - –ö–æ–º–º–∏—Ç–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏—Ö –Ω–∞–ª–∏—á–∏–∏
          #>
          $ErrorActionPreference = "Stop"
          $DebugEnabled = ($env:DEBUG_MODE -eq "true")
      
          # üîç –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —à–∞–≥–æ–≤
          $commitMessage = "${{ steps.push-details.outputs.commit_message }}"
          $mod_list = "${{ steps.process_game_version.outputs.mod_list }}" -split ";"
      
          if ($DebugEnabled) {
              Write-Host "`nüîµ [DEBUG] –ù–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è README.md"
              Write-Host "----------------------------------------"
              Write-Host "–°–ø–∏—Å–æ–∫ –º–æ–¥–æ–≤: $($mod_list -join ', ')"
              Write-Host "–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: $commitMessage"
              Write-Host "----------------------------------------"
          }
      
          foreach ($mod in $mod_list) {
              $modReadmePath = "$mod/README.md"
              $modVersionPath = "$mod/source/VERSION"
          
              # üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ –≤–µ—Ä—Å–∏–∏
              if (-not (Test-Path $modVersionPath)) {
                  Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –§–∞–π–ª VERSION –Ω–µ –Ω–∞–π–¥–µ–Ω: $mod" -ForegroundColor Red
                  exit 1
              }
          
              # üîÑ –ß—Ç–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –º–æ–¥–∞ —Å –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫–∏
              try {
                  # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º UTF-8, –∑–∞—Ç–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É
                  $modVersionContent = Get-Content $modVersionPath -Encoding UTF8 -ErrorAction SilentlyContinue -Raw
                  if (-not $modVersionContent) {
                      $modVersionContent = Get-Content $modVersionPath -Encoding Default -Raw
                  }
                  $modVersion = ($modVersionContent | ConvertFrom-Json).version
                  if ($DebugEnabled) {
                      Write-Host "üîµ [DEBUG] –ü—Ä–æ—á–∏—Ç–∞–Ω–∞ –≤–µ—Ä—Å–∏—è –º–æ–¥–∞ $mod : $modVersion"
                  }
              } catch {
                  Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ VERSION: $_" -ForegroundColor Red
                  exit 1
              }
          
              $newContent = @(
                  "# [$mod]",
                  "# Latest Version (v$modVersion) [compiled: $(Get-Date -Format 'yyyy-MM-dd')]",
                  "### [**Download for World of Tanks**](https://github.com/spoter/spoter-mods/releases/download/latest/$mod.zip)",
                  "### [**–°–∫–∞—á–∞—Ç—å –¥–ª—è Tanki Lesta**](https://github.com/spoter/spoter-mods/releases/download/latest/${mod}_RU.zip)",
                  "#"
              ) -join "`n"  # –¢–æ–ª—å–∫–æ 5 —Å—Ç—Ä–æ–∫, –±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏—à–Ω–µ–≥–æ `n`
              
              # üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ README.md
              if (Test-Path $modReadmePath) {
                  $content = Get-Content $modReadmePath -Raw
                  
                  # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫ –∏ –æ—Å—Ç–∞–ª—å–Ω–æ–µ
                  $splitContent = $content -split "`n", 6  # 5 —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π = 6 —á–∞—Å—Ç–µ–π
                  
                  # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–Ω—å—à–µ 5 —Å—Ç—Ä–æ–∫, –¥–æ–ø–æ–ª–Ω—è–µ–º –ø—É—Å—Ç—ã–º–∏
                  if ($splitContent.Count -lt 6) {
                      $splitContent += @("") * (6 - $splitContent.Count)
                  }
                  
                  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫ + –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (–±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫)
                  $newContentFull = $newContent + "`n" + $splitContent[5].TrimStart("`n")
              } else {
                  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å 5 —Å—Ç—Ä–æ–∫–∞–º–∏
                  $newContentFull = $newContent
              }
              
              # üîê –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ UTF-8 –±–µ–∑ BOM
              $newContentFull = $newContentFull.Replace("`r`n", "`n")
              $newContentFull | Out-File -FilePath $modReadmePath -Encoding utf8NoBOM -NoNewline
              Write-Host "‚úÖ [–£–°–ü–ï–•] README.md –¥–ª—è $mod –æ–±–Ω–æ–≤–ª–µ–Ω!" -ForegroundColor Green
          }
      
          # üîÑ –£–º–Ω—ã–π –∫–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
          git add README.md */README.md */*/README.md
          $changes = git status --porcelain
          if ($changes) {
              git config --global user.name "github-actions[bot]"
              git config --global user.email "github-actions[bot]@users.noreply.github.com"
              git commit -m "$commitMessage"
              git push origin master
              Write-Host "‚úÖ [–£–°–ü–ï–•] –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã!" -ForegroundColor Green
          } else {
              Write-Host "‚ÑπÔ∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞." -ForegroundColor Cyan
          }

      # üöÄ –®–∞–≥ 10. –£–º–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–µ–ª–∏–∑–∞
      - name: üöÄ –®–∞–≥ 10. –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–µ–ª–∏–∑–∞
        if: steps.check_commit.outputs.is_release == 'true'
        id: publish_releases
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG_MODE: "${{ env.DEBUG_MODE }}"
        run: |
          $ErrorActionPreference = "Stop"
          $DebugEnabled = ($env:DEBUG_MODE -eq "true")
      
          # üîÑ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —à–∞–≥–æ–≤
          $mod_list = "${{ steps.process_game_version.outputs.mod_list }}" -split ";"
          $commitMessage = "${{ steps.push-details.outputs.commit_message }}"
          $commitHash = "${{ steps.push-details.outputs.commit_hash }}"
      
          Write-Host "`nüîµ –ù–∞—á–∞–ª–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–µ–ª–∏–∑–∞..."
          Write-Host "----------------------------------------"
          Write-Host "üìù –°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: $commitMessage"
          Write-Host "üî¢ –ú–æ–¥–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: $($mod_list.Count)"
      
          # ===========================================
          # 1. üîÑ –°–±–æ—Ä –í–°–ï–• –∞—Ä—Ö–∏–≤–æ–≤ –∏–∑ –∫—ç—à–∞
          # ===========================================
          $allArchives = @()
          $allMods = Get-ChildItem -Path "*/zip/*.zip" -Recurse
          foreach ($archive in $allMods) {
              $allArchives += $archive.FullName
          }
      
          # ===========================================
          # 2. üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –∞—Ä—Ö–∏–≤–æ–≤
          # ===========================================
          $validArchives = @()
          foreach ($mod in $mod_list) {
              $wg_zip = "$mod/zip/${mod}.zip"
              $lesta_zip = "$mod/zip/${mod}_RU.zip"
              
              if (-not (Test-Path $wg_zip) -or -not (Test-Path $lesta_zip)) {
                  Write-Host "‚ùå [–û–®–ò–ë–ö–ê] –ê—Ä—Ö–∏–≤—ã –¥–ª—è $mod –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!" -ForegroundColor Red
                  exit 1
              }
              
              $validArchives += $wg_zip, $lesta_zip
          }
      
          # ===========================================
          # 3. üìù –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞
          # ===========================================
          $releaseBody = "# üöÄ $commitMessage üöÄ`n### –î–µ—Ç–∞–ª–∏:`n- –•—ç—à –∫–æ–º–º–∏—Ç–∞: [$commitHash](https://github.com/spoter/spoter-mods/commit/$commitHash)`n- –î–∞—Ç–∞ —Å–±–æ—Ä–∫–∏: $(Get-Date -Format 'yyyy-MM-dd')"

      
          # ===========================================
          # 4. üöÄ –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–µ–ª–∏–∑–∞
          # ===========================================
          
          try {
              # üîÑ –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —Ä–µ–ª–∏–∑–∞
              if (gh release view latest 2>$null) {
                  Write-Host "üîµ –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ä–µ–ª–∏–∑–∞ 'latest'..."
                  gh release delete latest --yes
              }
          } catch {
              Write-Host "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: $_" -ForegroundColor Yellow
          }
          
          try {
              # üÜï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–µ–ª–∏–∑–∞ —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å—é
              gh release create "latest" `
                  $allArchives `
                  --title "Release details: $commitMessage" `
                  --notes "$releaseBody" `
                  --latest `
              
              Write-Host "‚úÖ –†–µ–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!" -ForegroundColor Green
          } catch {
              Write-Host "‚ùå [FATAL] –û—à–∏–±–∫–∞: $_" -ForegroundColor Red
              exit 1
          }
